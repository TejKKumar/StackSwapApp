// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StackSwapApplication.Data;

#nullable disable

namespace StackSwapApplication.Migrations
{
    [DbContext(typeof(TradeContext))]
    [Migration("20231111013208_TradeTable")]
    partial class TradeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("StackSwapApplication.Models.Card", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardTier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Champion")
                        .HasColumnType("TEXT");

                    b.Property<double>("Damage")
                        .HasColumnType("REAL");

                    b.Property<double>("Health")
                        .HasColumnType("REAL");

                    b.Property<double>("Magic")
                        .HasColumnType("REAL");

                    b.Property<uint>("OwnerID")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("PurchaseId")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("TradeId")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("TradeId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerID");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("TradeId");

                    b.HasIndex("TradeId1");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("StackSwapApplication.Models.Purchase", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("BuyerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PurchaseDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("StackSwapApplication.Models.Trade", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("BuyerId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("SellerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TradeDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("StackSwapApplication.Models.TradeUser", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("StackSwapApplication.Models.Card", b =>
                {
                    b.HasOne("StackSwapApplication.Models.TradeUser", "Owner")
                        .WithMany("Cards")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StackSwapApplication.Models.Purchase", null)
                        .WithMany("Cards")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("StackSwapApplication.Models.Trade", null)
                        .WithMany("buyerCards")
                        .HasForeignKey("TradeId");

                    b.HasOne("StackSwapApplication.Models.Trade", null)
                        .WithMany("sellerCards")
                        .HasForeignKey("TradeId1");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("StackSwapApplication.Models.Purchase", b =>
                {
                    b.HasOne("StackSwapApplication.Models.TradeUser", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("StackSwapApplication.Models.Trade", b =>
                {
                    b.HasOne("StackSwapApplication.Models.TradeUser", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StackSwapApplication.Models.TradeUser", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("StackSwapApplication.Models.Purchase", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("StackSwapApplication.Models.Trade", b =>
                {
                    b.Navigation("buyerCards");

                    b.Navigation("sellerCards");
                });

            modelBuilder.Entity("StackSwapApplication.Models.TradeUser", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
