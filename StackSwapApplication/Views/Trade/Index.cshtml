@model StackSwapApplication.Models.TradeUser


@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
    
*@


<h2 class="h2Style">Welcome @Model.Username</h2>

<div>


@if(Model.Cards.Count == 0)
{
    <div class="font">
        <p>Oof such empty, you got no Cards @Model.Username</p><br>
        <p>Header over to the <a asp-action="Index" asp-controller="Purchase">catalogue</a> to get yourself some cards</p>

    </div>
}
else
{       <div class="wrapperT">
        <table class="viewTable">
            <thead>
                <tr>
                    <th>
                        <img src="~/images/Tier1.PNG" />
                    </th>
                    <th>
                        <img src="~/images/Tier2.png" />
                    </th>
                    <th>
                        <img src="~/images/Tier3.png" />
                    </th>
                    <th>
                        <img src="~/images/Tier4.png" />

                    </th>
                    <th>
                        <img src="~/images/Tier5.png" />
                    </th>

                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Model.Cards.Where(c=>c.CardTier == Tier.Tier1).Count()
                    </td>
                    <td>
                        @Model.Cards.Where(c=>c.CardTier == Tier.Tier2).Count()
                    </td>
                    <td>
                        @Model.Cards.Where(c=>c.CardTier == Tier.Tier3).Count()
                    </td>
                    <td>
                        @Model.Cards.Where(c=>c.CardTier == Tier.Tier4).Count()
                    </td>
                    <td>
                        @Model.Cards.Where(c=>c.CardTier == Tier.Tier5).Count()
                    </td>
                </tr>

            </tbody>
        </table>
        </div>
        <br />
    <div class="wrapperT">

           


        <div class="cardDisplay">
            @foreach (var item in Model.Cards)
            {
                <div class="@item.CardTier.ToString()">
                    <div class="newCardName">@item.Champion</div>
                    <div class="newCardTier">
                        @switch (item.CardTier)
                        {
                            case Tier.Tier1:
                                {
                                    <img src="@($"/images/{item.CardTier.ToString()}.png")">
                                    break;
                                }
                            case Tier.Tier2:
                                {
                                    <img src="@($"/images/{item.CardTier.ToString()}.png")">
                                    break;
                                }
                            case Tier.Tier3:
                                {
                                    <img src="@($"/images/{item.CardTier.ToString()}.png")">
                                    break;
                                }
                            case Tier.Tier4:
                                {
                                    <img src="@($"/images/{item.CardTier.ToString()}.png")">
                                    break;
                                }
                            case Tier.Tier5:
                                {
                                    <img src="@($"/images/{item.CardTier.ToString()}.png")">
                                    break;
                                }
                        }
                    </div>
                    <div><p><img src="~/images/damage.png" />@item.Damage <img src="~/images/health.png" />@item.Health <img src="~/images/magic.png" />@item.Magic</p></div>
                </div>
            }
        </div>
    </div>
}




   